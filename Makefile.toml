[config]
# Skip loading of all core tasks which saves up a bit on toml parsing and task creation
skip_core_tasks = true

[env]
CARGO_MAKE_EXTEND_WORKSPACE_MAKEFILE = true
SERVE_ADDR = "0.0.0.0:3333"
STORAGE_PATH = "./storage.json"
MULTIVERS_X_GATEWAY = "https://devnet-gateway.multiversx.com"
MULTIVERS_X_PRIVATE_KEY = "977e6db744025e00ed790ce96959a09b32704690801891b6a063c82e1c958110"
MULTIVERS_X_SMART_CONTRACT_ADDRESS = "erd1qqqqqqqqqqqqqpgqadcs8ucgal22mzy0fsv6zydzrchkfnfmrq0q4gzuam"

[tasks.build]
workspace = false
command = "cargo"
args = ["build", "-p", "backend", "${@}"]

[tasks.run]
env_files = [".env"]
workspace = false
command = "cargo"
args = ["run", "-p", "backend", "${@}"]

[tasks.local-ci]
workspace = false
dependencies = ["check", "test", "unused-deps", "coverage", "audit"]

[tasks.fmt]
workspace = false
command = "cargo"
args = ["fmt", "--all", "--", "--emit=files"]
dependencies = ["fmt-clippy"]

[tasks.fmt-clippy]
workspace = false
install_crate = "clippy"
command = "cargo"
args = ["clippy", "--fix", "--allow-dirty", "--allow-staged", "--workspace"]

[tasks.unused-deps]
workspace = false
install_crate = "cargo-udeps"
command = "cargo"
args = ["udeps", "--all-targets", "--backend=depinfo"]

[tasks.check]
dependencies = ["fmt-check", "clippy-check"]

[tasks.fmt-check]
workspace = false
command = "cargo"
args = ["fmt", "--all", "--check"]

[tasks.clippy-check]
workspace = false
install_crate = "clippy"
command = "cargo"
args = ["clippy", "--workspace", "--locked", "--", "-D", "warnings"]

[tasks.nextest-base]
workspace = false
install_crate = "cargo-nextest"

[tasks.test]
env = { "RUST_LOG" = "debug" }
workspace = false
command = "cargo"
args = [
  "nextest",
  "run",
  "--workspace",
  "--bins",
  "--tests",
  "--all-targets",
  "--no-fail-fast",
  "${@}",
]
dependencies = ["nextest-base"]

[tasks.coverage-base]
workspace = false
env = { "CARGO_INCREMENTAL" = "0", "RUSTFLAGS" = "-Cinstrument-coverage", "LLVM_PROFILE_FILE" = "target/coverage/%p-%m.profraw" }
command = "cargo"
args = ["nextest", "run"]
dependencies = ["nextest-base"]

[tasks.coverage]
env = { "RUST_LOG" = "debug" }
workspace = false
install_crate = "grcov"
dependencies = ["coverage-base"]
script = '''
mkdir -p target/coverage
grcov . --binary-path ./target/debug/deps/ -s . -t html,cobertura --branch --ignore-not-existing --ignore '../*' --ignore "/*" -o target/coverage/
echo "✅✅✅✅"
echo "View the report: file://$(pwd)/target/coverage/html/index.html"
cat target/coverage/html/coverage.json
echo ""
echo "✅✅✅✅"
'''

[tasks.audit]
workspace = false
install_crate = "cargo-audit"
command = "cargo"
args = ["audit"]
